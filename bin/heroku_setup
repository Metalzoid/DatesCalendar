#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args, exception: true)
end

def prompt_for_env_var(var_name)
  print "== What is your #{var_name}? "
  value = gets.chomp
  if value.empty?
    puts "Error: #{var_name} cannot be empty."
    exit 1
  end
  value
end

FileUtils.chdir APP_ROOT do
  puts "\n== This API using Mailtrap? (y/n)=="
  answer = gets.chomp.upcase

  if answer == 'Y'
    puts 'Deleting heroku vars'
    env_vars = {
      'MAILTRAP_USERNAME' => prompt_for_env_var('Mailtrap username'),
      'MAILTRAP_PASSWORD' => prompt_for_env_var('Mailtrap password'),
      'MAILTRAP_API_KEY' => prompt_for_env_var('Mailtrap API Key'),
      'USE_MAILTRAP' => 'true'
    }
  else
    env_vars = {
      'USE_MAILTRAP' => 'false'
    }
  end
  puts 'Adding heroku vars'
  env_vars.each_key { |key| system! "heroku config:unset #{key}" }
  env_vars.each { |key, value| system! "heroku config:set #{key}=#{value}" }
  system! 'heroku run bin/jwt_setup'

  puts "\n== WARNING ! DELETING DB !!! CONTINUE ?? (y/n)=="
  answer2 = gets.chomp.upcase
  if answer2 == 'Y'
    puts "\n== Preparing database =="
    system! 'heroku run rails db:migrate'
  end

  puts "\n== Removing old logs and tempfiles =="
  system! 'heroku run rails log:clear tmp:clear'

  puts "\n== Restarting server... =="
  system! 'heroku run rails restart'

  puts "\n== Setup complete =="
end
